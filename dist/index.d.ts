// Generated by dts-bundle v0.7.3

export class EventEmitter {
    on(event: string, listener: any): void;
    emit(event: string, ...args: any[]): void;
    removeEvents(): void;
}

export class WebSocket extends EventEmitter {
    OPEN: number;
    CLOSED: number;
    isAlive: boolean;
    external: any;
    executeOn: string;
    constructor(url: string, external: any, isServer?: boolean);
    readonly _socket: any;
    readonly readyState: number;
    ping(message?: any): void;
    send(message: any, options?: any, cb?: any, compress?: any): void;
    terminate(): void;
    close(code: number, reason: string): void;
}

export class WebSocketServer extends EventEmitter {
    constructor(configs: any, callback: any);
    broadcast(message: string | BinaryType, options: any): void;
    startAutoPing(interval: string, appLevel?: boolean): void;
}

export const native: any;
export const OPCODE_TEXT: number;
export const OPCODE_PING: number;
export const OPCODE_BINARY: number;
export const APP_PONG_CODE: number;
export const APP_PING_CODE: Buffer;
export const PERMESSAGE_DEFLATE: number;
export const SLIDING_DEFLATE_WINDOW: number;
export const DEFAULT_PAYLOAD_LIMIT: number;
export const noop: any;

